using DiscService.Messaging.Models;

namespace DiscService.Messaging.Kafka;

public class BotMessageHandler : IMessageHandler
{
    public Task<BotMessage?> HandleAsync(BotMessage incoming)
    {
        string? responseText;
        object? replyMarkup = null;

        switch (incoming.Data.Text)
        {
            case "/hello":
                responseText = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ *DiscService* üëã";
                break;
            case "/world":
                responseText = "–ö–æ–º–∞–Ω–¥–∞ /world _–ø—Ä–∏–Ω—è—Ç–∞_ üåç";
                break;
            case "callback_test":
                responseText = $"–í—ã –Ω–∞–∂–∞–ª–∏: *{incoming.Data.Text}*";
                break;
            case "/buttons":
                responseText = "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É:";
                replyMarkup = new
                {
                    inline_keyboard = new[]
                    {
                        new[]
                        {
                            new { text = "üëâ –ù–∞–∂–º–∏ –º–µ–Ω—è", callback_data = "callback_test" }
                        }
                    }
                };
                break;
            default:
                responseText = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.";
                break;
        }

        return Task.FromResult<BotMessage?>(new BotMessage
        {
            Method = "sendmessage",
            Filename = null,
            KafkaMessageId = incoming.KafkaMessageId,
            Status = "COMPLETED",
            Data = new SendMessageData
            {
                ChatId = incoming.Data.ChatId,
                Text = responseText,
                ParseMode = "Markdown",
                ReplyMarkup = replyMarkup
            }
        });
    }
}